Last Modified: Fri Jan 21, 2011 at 12:07

Code
	Unit tests!!
	Start with node distance function
	Two inputs N and k
		N - total nodes in system
		k - number of neighbors to keep
	Class Node(identifier)
		Variables
			myID <- identifier
			k <- amount of neighbors to keep
			neighbors <- Dictionary of nodeIDs, distance
			bits <- address space
		Methods
			__init__(above) <- need to set up random neighbors in address space
			FindDistance(nodeID) <- calculate distance to nodeID
			ChooseNewNeighbors(newnNodesList) <- Calculate distances to new nodes and choose k closest
			Gossip(nodeID) <- send node my neighbor list, receive theirs, run ChooseNewNegihbors
			SumCurrentDistances() <- returns the current neighbor distances
	Class Simulator(cycles, N, k, graph)
		Variables
			cycles
			N
			k
			graph
		Methods
			__init__(above) <- network initialization phase
			Simulate() <- network evolution phase
Paper
	Problem Statement
		What was the assignment
		Cite T-Man
	Approach
		How I solved the problem
	Results and Figures
		Interpretation of the figure(s)
		Plot of sum of distance by cycle
		Graph of node connectivity at cycles 1, 5, 10, and 15
	Conclusions
		Short review and any thoughts to share
